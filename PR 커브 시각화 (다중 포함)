# PR 커브 시각화

# 모델 로딩
def get_model(num_classes, checkpoint_path, device) :
    model = torchvision.models.detection.fasterrcnn_resnet50_fpn(pretrained=False)
    in_features = model.roi_heads.box_predictor.cls_score.in_features
    model.roi_heads.box_predictor = FastRCNNPredictor(in_features, num_classes)

    checkpoint = torch.load(checkpoint_path, map_location=device)
    model.load_state_dict(checkpoint["model_state_dict"])
    model.to(device)
    model.eval()
    return model

# PR 커브용 평가 (IoU@50)
def evaluate_for_pr_curve(model, data_loader, device, iou_thresh=0.5) :
    model.eval()
    all_scores = []
    all_true_labels = []  # 1 : TP, 0 : FP

    with torch.no_grad() :
        for images, targets in tqdm(data_loader, desc="Evaluating for PR Curve") :
            images = [img.to(device) for img in images]
            outputs = model(images)

            for output, target in zip(outputs, targets) :
                pred_boxes = output['boxes'].cpu()
                pred_scores = output['scores'].cpu().numpy()
                gt_boxes = target['boxes'].cpu()

                if len(pred_boxes) == 0 :
                    continue

                if len(gt_boxes) == 0 :
                    tp_fp = [0] * len(pred_boxes)
                else:
                    ious = box_iou(pred_boxes, gt_boxes)
                    max_ious, _ = ious.max(dim=1)
                    tp_fp = (max_ious >= iou_thresh).numpy().astype(int)

                all_scores.extend(pred_scores)
                all_true_labels.extend(tp_fp)

    return np.array(all_true_labels), np.array(all_scores)

# PR 커브 시각화
def plot_pr_curve(y_true, y_scores, iou_thresh) :
    precision, recall, _ = precision_recall_curve(y_true, y_scores)
    ap = average_precision_score(y_true, y_scores)

    plt.figure(figsize=(8, 6))
    plt.plot(recall, precision, marker='.')
    plt.xlabel("Recall")
    plt.ylabel("Precision")
    plt.title(f"PR Curve @ IoU {int(iou_thresh*100)} (AP: {ap:.4f})")
    plt.grid(True)
    plt.show()

# 예시 실행
if __name__ == "__main__" :
    # 환경 설정
    device = torch.device("cuda" if torch.cuda.is_available() else "cpu")
    checkpoint_path = "/content/drive/MyDrive/Colab/ACK2025/olive/model/250703_epoch_7.pth"
    num_classes = 3

    # 모델 불러오기
    model = get_model(num_classes, checkpoint_path, device)

    # 평가 및 PR 커브 시각화
    y_true, y_scores = evaluate_for_pr_curve(model, test_loader, device, iou_thresh=0.5)
    plot_pr_curve(y_true, y_scores, iou_thresh=0.5)
