from google.colab import drive
drive.mount('/content/drive')

import cv2
import numpy as np
from matplotlib import pyplot as plt

____________________________________________________________________________________________________

# 이미지 불러오기 및 RGB 변환
image_path = "/content/drive/MyDrive/Colab/ACK2025/mango/OpenCV_data/B_3.JPG"
img = cv2.imread(image_path)

if img is None :
    print("이미지 로드 실패!")
    exit()
else :
    print("이미지 로드 성공!")

img_rgb = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)

# GrabCut으로 과실 전체 추출
mask = np.zeros(img.shape[:2], np.uint8)
bgdModel = np.zeros((1, 65), np.float64)
fgdModel = np.zeros((1, 65), np.float64)

height, width = img.shape[:2]
margin_x = int(width * 0.05)
margin_y = int(height * 0.04)
rect = (margin_x, margin_y, width - 2 * margin_x, height - 2 * margin_y)

cv2.grabCut(img, mask, rect, bgdModel, fgdModel, 5, cv2.GC_INIT_WITH_RECT)
mask2 = np.where((mask == 2) | (mask == 0), 0, 1).astype('uint8')  # 과실 영역 : 1
fruit_only = img * mask2[:, :, np.newaxis]

# 과실 영역 크기 조정 및 HSV 변환
resized_fruit = cv2.resize(fruit_only, (512, 512))
hsv_fruit = cv2.cvtColor(resized_fruit, cv2.COLOR_BGR2HSV)

# 병징 색상 범위 정의
lower_black = np.array([0, 0, 0])
upper_black = np.array([180, 255, 40])

lower_brown = np.array([10, 100, 30])
upper_brown = np.array([20, 255, 160])

# 병징 마스크 생성
mask_black = cv2.inRange(hsv_fruit, lower_black, upper_black)
mask_brown = cv2.inRange(hsv_fruit, lower_brown, upper_brown)
disease_mask = cv2.bitwise_or(mask_black, mask_brown)

# 병징 영역 추출
disease_area = cv2.bitwise_and(resized_fruit, resized_fruit, mask=disease_mask)

# 시각화
cv2_imshow(resized_fruit)       # 과실만 포함된 이미지
cv2_imshow(disease_mask)        # 병징 마스크
cv2_imshow(disease_area)        # 병징 색상만 추출된 결과

____________________________________________________________________________________________________

# 이미지 불러오기
img = cv2.imread("/content/drive/MyDrive/Colab/ACK2025/mango/OpenCV_data/N_3.JPG")
img_rgb = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)

# GrabCut으로 과실 전체 추출
mask = np.zeros(img.shape[:2], np.uint8)
bgdModel = np.zeros((1, 65), np.float64)
fgdModel = np.zeros((1, 65), np.float64)

height, width = img.shape[:2]
margin_x = int(width * 0.04)
margin_y = int(height * 0.03)
rect = (margin_x, margin_y, width - 2 * margin_x, height - 2 * margin_y)

cv2.grabCut(img, mask, rect, bgdModel, fgdModel, 5, cv2.GC_INIT_WITH_RECT)
mask2 = np.where((mask == 2) | (mask == 0), 0, 1).astype('uint8')
fruit_only = img_rgb * mask2[:, :, np.newaxis]

# 과실 영역 마스크 생성
fruit_mask = np.any(fruit_only != 0, axis=-1).astype(np.uint8)

# LAB 색공간 변환 후 과실 영역의 평균 색상 분석
masked_pixels = fruit_only[fruit_mask == 1]
lab_pixels = cv2.cvtColor(masked_pixels.reshape(-1,1,3), cv2.COLOR_RGB2LAB).reshape(-1,3)

L_mean = np.mean(lab_pixels[:, 0])
A_mean = np.mean(lab_pixels[:, 1])
B_mean = np.mean(lab_pixels[:, 2])

# 숙성도 판별 (기준은 실험적으로 조정할 수 있음)
if L_mean >= 170 and A_mean < 130 and B_mean > 140 :
    maturity = "Immature" # 미숙 (연녹색 또는 황록색)
elif 150 <= L_mean < 170 and 135 <= A_mean <= 150 and 125 <= B_mean <= 130 :
    maturity = "Mature" # 중간 숙성 (황색 바탕에 붉은기 시작, 오렌지~핑크톤)
elif L_mean < 150 and A_mean > 150 and B_mean > 140 :
    maturity = "Ripe" # 완숙 (선명한 붉은색 + 황금색)
else :
    maturity = "Uncertain"

# 결과 출력
print("[숙성도 분석 결과]")
print(f"- 평균 L값 (밝기) : {L_mean:.1f}")
print(f"- 평균 a*값 (녹→적) : {A_mean:.1f}")
print(f"- 평균 b*값 (청→황) : {B_mean:.1f}")
print(f"- 숙성도 판단 : {maturity}")

# 시각화
plt.figure(figsize=(12, 5))
plt.subplot(1, 2, 1)
plt.title("Original")
plt.imshow(img_rgb)
plt.axis("off")

plt.subplot(1, 2, 2)
plt.title(f"Fruit _ Maturity : {maturity}")
plt.imshow(fruit_only)
plt.axis("off")
plt.tight_layout()
plt.show()
